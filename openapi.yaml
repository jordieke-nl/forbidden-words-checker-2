openapi: 3.1.0
info:
  title: Forbidden Words Checker API
  version: 1.0.0
  description: API voor het controleren van documenten op verboden woorden. Ondersteunt PDF en DOCX bestanden tot 25MB.
  contact:
    name: Jordi Eke
    email: jordi.eke@example.com
  license:
    name: MIT

servers:
  - url: https://forbidden-words-checker-2.onrender.com
    description: Production server

paths:
  /health:
    get:
      operationId: healthCheck
      summary: Health check endpoint
      description: Returns OK if the server is running
      tags:
        - Health
      responses:
        '200':
          description: Server is healthy
          content:
            text/plain:
              schema:
                type: string
                example: OK

  /check:
    post:
      operationId: checkDocument
      summary: Controleer document op verboden woorden
      description: Upload een PDF of DOCX bestand om te controleren op verboden woorden. Het bestand kan worden ge√ºpload via multipart/form-data of als base64-gecodeerde string in JSON.
      tags:
        - Documents
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: Het PDF of DOCX bestand om te controleren
              required:
                - file
          application/json:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: base64
                  description: Het PDF of DOCX bestand als base64-gecodeerde string
                filename:
                  type: string
                  description: De originele bestandsnaam met extensie (.pdf of .docx)
              required:
                - file
                - filename
      responses:
        '200':
          description: Document succesvol gecontroleerd
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Document gecontroleerd"
                  filename:
                    type: string
                    example: "document.pdf"
                  type:
                    type: string
                    enum: [PDF, DOCX]
                    example: "PDF"
                  matches:
                    type: array
                    items:
                      type: object
                      properties:
                        forbidden_word:
                          type: string
                          example: "verboden"
                        context:
                          type: string
                          example: "...dit is een verboden woord in de tekst..."
                        recommendation:
                          type: string
                          example: "Vervang 'verboden' door een geschikter woord."
                        explanation:
                          type: string
                          example: "Het woord 'verboden' is niet toegestaan in deze context."
                required:
                  - message
                  - filename
                  - type
                  - matches
        '400':
          description: Ongeldig verzoek
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server fout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    AnalysisResult:
      type: object
      properties:
        message:
          type: string
          example: "Document analysis complete"
        filename:
          type: string
          example: "document.pdf"
        type:
          type: string
          enum: [PDF, DOCX]
          example: "PDF"
        total_sections:
          type: integer
          example: 5
        matches:
          type: array
          items:
            $ref: '#/components/schemas/Match'
      required:
        - message
        - filename
        - type
        - total_sections
        - matches

    Match:
      type: object
      properties:
        section_number:
          type: integer
          example: 1
        section_title:
          type: string
          example: "Introduction"
        forbidden_word:
          type: string
          example: "example"
        context:
          type: string
          example: "This is an example document that contains forbidden words."
        recommendation:
          type: string
          example: "Consider replacing 'example' with a more appropriate term."
        explanation:
          type: string
          example: "The word 'example' is considered inappropriate in this context and should be avoided in professional documentation."
      required:
        - section_number
        - section_title
        - forbidden_word
        - context
        - recommendation
        - explanation

    Error:
      type: object
      properties:
        message:
          type: string
          example: "Ongeldig verzoek"
        details:
          type: string
          example: "Upload een PDF of DOCX bestand via multipart/form-data met veldnaam 'file' of via JSON met base64 en filename."
      required:
        - message
        - details 